//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.5.1-SNAPSHOT'.
//
package com.example.operation_based_possible_shapes_fragment.fragment.selections

import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledFragment
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.notNull
import com.example.operation_based_possible_shapes_fragment.type.GraphQLID
import com.example.operation_based_possible_shapes_fragment.type.GraphQLString
import com.example.operation_based_possible_shapes_fragment.type.PetOwner
import kotlin.collections.List

public object ThingWithIDFragmentSelections {
  private val __onHuman: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __onDroid: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "build_name",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "model_name",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __owner: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "PetOwner",
          possibleTypes = listOf("Human", "Droid")
        ).selections(PetOwnerFragmentSelections.__root)
        .build()
      )

  private val __onPet: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "owner",
          type = PetOwner.type.notNull()
        ).selections(__owner)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledFragment.Builder(
          typeCondition = "Human",
          possibleTypes = listOf("Human")
        ).selections(__onHuman)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Droid",
          possibleTypes = listOf("Droid")
        ).selections(__onDroid)
        .build(),
        CompiledFragment.Builder(
          typeCondition = "Pet",
          possibleTypes = listOf("Pet")
        ).selections(__onPet)
        .build()
      )
}
