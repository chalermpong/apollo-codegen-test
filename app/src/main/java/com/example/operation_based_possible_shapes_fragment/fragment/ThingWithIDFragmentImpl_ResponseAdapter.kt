//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.5.1-SNAPSHOT'.
//
package com.example.operation_based_possible_shapes_fragment.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object ThingWithIDFragmentImpl_ResponseAdapter {
  public object IThingWithIDFragment :
      Adapter<com.example.operation_based_possible_shapes_fragment.fragment.IThingWithIDFragment> {
    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.operation_based_possible_shapes_fragment.fragment.IThingWithIDFragment {
      val __typename = reader.readTypename()
      return when(__typename) {
        "Human",
        -> HumanThingWithIDFragment.fromJson(reader, customScalarAdapters, __typename)
        "Droid",
        -> DroidThingWithIDFragment.fromJson(reader, customScalarAdapters, __typename)
        "Pet",
        -> PetThingWithIDFragment.fromJson(reader, customScalarAdapters, __typename)
        else
        -> ThingWithIDFragment.fromJson(reader, customScalarAdapters, __typename)
      }
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.IThingWithIDFragment,
    ): Unit {
      when(value) {
        is com.example.operation_based_possible_shapes_fragment.fragment.HumanThingWithIDFragment ->
            HumanThingWithIDFragment.toJson(writer, customScalarAdapters, value)
        is com.example.operation_based_possible_shapes_fragment.fragment.DroidThingWithIDFragment ->
            DroidThingWithIDFragment.toJson(writer, customScalarAdapters, value)
        is com.example.operation_based_possible_shapes_fragment.fragment.PetThingWithIDFragment ->
            PetThingWithIDFragment.toJson(writer, customScalarAdapters, value)
        is com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment ->
            ThingWithIDFragment.toJson(writer, customScalarAdapters, value)
      }
    }
  }

  public object HumanThingWithIDFragment {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): com.example.operation_based_possible_shapes_fragment.fragment.HumanThingWithIDFragment {
      var __typename: String? = typename
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      reader.rewind()
      val _onHuman = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.fromJson(reader,
          customScalarAdapters)

      var _onDroid: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnDroid? = null
      if (possibleTypes("Droid").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onDroid = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.fromJson(reader,
            customScalarAdapters)
      }

      var _onPet: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet? = null
      if (possibleTypes("Pet").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPet = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.fromJson(reader,
            customScalarAdapters)
      }

      return com.example.operation_based_possible_shapes_fragment.fragment.HumanThingWithIDFragment(
        __typename = __typename,
        id = _id!!,
        onHuman = _onHuman,
        onDroid = _onDroid,
        onPet = _onPet
      )
    }

    public fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.HumanThingWithIDFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.toJson(writer,
          customScalarAdapters, value.onHuman)

      if (value.onDroid != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.toJson(writer,
            customScalarAdapters, value.onDroid)
      }

      if (value.onPet != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.toJson(writer,
            customScalarAdapters, value.onPet)
      }
    }
  }

  public object DroidThingWithIDFragment {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): com.example.operation_based_possible_shapes_fragment.fragment.DroidThingWithIDFragment {
      var __typename: String? = typename
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onHuman: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnHuman? = null
      if (possibleTypes("Human").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onHuman = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.fromJson(reader,
            customScalarAdapters)
      }

      reader.rewind()
      val _onDroid = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.fromJson(reader,
          customScalarAdapters)

      var _onPet: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet? = null
      if (possibleTypes("Pet").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPet = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.fromJson(reader,
            customScalarAdapters)
      }

      return com.example.operation_based_possible_shapes_fragment.fragment.DroidThingWithIDFragment(
        __typename = __typename,
        id = _id!!,
        onHuman = _onHuman,
        onDroid = _onDroid,
        onPet = _onPet
      )
    }

    public fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.DroidThingWithIDFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      if (value.onHuman != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.toJson(writer,
            customScalarAdapters, value.onHuman)
      }

      com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.toJson(writer,
          customScalarAdapters, value.onDroid)

      if (value.onPet != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.toJson(writer,
            customScalarAdapters, value.onPet)
      }
    }
  }

  public object PetThingWithIDFragment {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): com.example.operation_based_possible_shapes_fragment.fragment.PetThingWithIDFragment {
      var __typename: String? = typename
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onHuman: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnHuman? = null
      if (possibleTypes("Human").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onHuman = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.fromJson(reader,
            customScalarAdapters)
      }

      var _onDroid: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnDroid? = null
      if (possibleTypes("Droid").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onDroid = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.fromJson(reader,
            customScalarAdapters)
      }

      reader.rewind()
      val _onPet = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.fromJson(reader,
          customScalarAdapters)

      return com.example.operation_based_possible_shapes_fragment.fragment.PetThingWithIDFragment(
        __typename = __typename,
        id = _id!!,
        onHuman = _onHuman,
        onDroid = _onDroid,
        onPet = _onPet
      )
    }

    public fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.PetThingWithIDFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      if (value.onHuman != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.toJson(writer,
            customScalarAdapters, value.onHuman)
      }

      if (value.onDroid != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.toJson(writer,
            customScalarAdapters, value.onDroid)
      }

      com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.toJson(writer,
          customScalarAdapters, value.onPet)
    }
  }

  public object ThingWithIDFragment {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id")

    public fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment {
      var __typename: String? = typename
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onHuman: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnHuman? = null
      if (possibleTypes("Human").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onHuman = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.fromJson(reader,
            customScalarAdapters)
      }

      var _onDroid: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnDroid? = null
      if (possibleTypes("Droid").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onDroid = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.fromJson(reader,
            customScalarAdapters)
      }

      var _onPet: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet? = null
      if (possibleTypes("Pet").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onPet = com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.fromJson(reader,
            customScalarAdapters)
      }

      return com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment(
        __typename = __typename,
        id = _id!!,
        onHuman = _onHuman,
        onDroid = _onDroid,
        onPet = _onPet
      )
    }

    public fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      if (value.onHuman != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnHuman.toJson(writer,
            customScalarAdapters, value.onHuman)
      }

      if (value.onDroid != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnDroid.toJson(writer,
            customScalarAdapters, value.onDroid)
      }

      if (value.onPet != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragmentImpl_ResponseAdapter.ThingWithIDFragment.OnPet.toJson(writer,
            customScalarAdapters, value.onPet)
      }
    }

    public object OnHuman :
        Adapter<com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnHuman>
        {
      public val RESPONSE_NAMES: List<String> = listOf("name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnHuman {
        var _name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnHuman(
          name = _name!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnHuman,
      ): Unit {
        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }

    public object OnDroid :
        Adapter<com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnDroid>
        {
      public val RESPONSE_NAMES: List<String> = listOf("build_name", "model_name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnDroid {
        var _build_name: String? = null
        var _model_name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _build_name = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _model_name = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnDroid(
          build_name = _build_name!!,
          model_name = _model_name!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnDroid,
      ): Unit {
        writer.name("build_name")
        StringAdapter.toJson(writer, customScalarAdapters, value.build_name)

        writer.name("model_name")
        StringAdapter.toJson(writer, customScalarAdapters, value.model_name)
      }
    }

    public object OnPet :
        Adapter<com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet>
        {
      public val RESPONSE_NAMES: List<String> = listOf("name", "owner")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet {
        var _name: String? = null
        var _owner: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.IOwner? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _owner = IOwner.obj(true).fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet(
          name = _name!!,
          owner = _owner!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet,
      ): Unit {
        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)

        writer.name("owner")
        IOwner.obj(true).toJson(writer, customScalarAdapters, value.owner)
      }

      private object IOwner :
          Adapter<com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.IOwner>
          {
        public override fun fromJson(reader: JsonReader,
            customScalarAdapters: CustomScalarAdapters):
            com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.IOwner {
          val __typename = reader.readTypename()
          return when(__typename) {
            "Human",
            -> HumanOwner.fromJson(reader, customScalarAdapters, __typename)
            "Droid",
            -> DroidOwner.fromJson(reader, customScalarAdapters, __typename)
            else
            -> Owner.fromJson(reader, customScalarAdapters, __typename)
          }
        }

        public override fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.IOwner,
        ): Unit {
          when(value) {
            is
                com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.HumanOwner ->
                HumanOwner.toJson(writer, customScalarAdapters, value)
            is
                com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.DroidOwner ->
                DroidOwner.toJson(writer, customScalarAdapters, value)
            is
                com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.Owner ->
                Owner.toJson(writer, customScalarAdapters, value)
          }
        }
      }

      public object HumanOwner {
        public val RESPONSE_NAMES: List<String> = listOf("__typename")

        public fun fromJson(
          reader: JsonReader,
          customScalarAdapters: CustomScalarAdapters,
          typename: String,
        ):
            com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.HumanOwner {
          var __typename: String? = typename

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          reader.rewind()
          val _petOwnerFragment = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.fromJson(reader,
              customScalarAdapters, __typename!!)

          return com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.HumanOwner(
            __typename = __typename!!,
            petOwnerFragment = _petOwnerFragment
          )
        }

        public fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.HumanOwner,
        ): Unit {
          writer.name("__typename")
          StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

          com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.toJson(writer,
              customScalarAdapters, value.petOwnerFragment)
        }
      }

      public object DroidOwner {
        public val RESPONSE_NAMES: List<String> = listOf("__typename")

        public fun fromJson(
          reader: JsonReader,
          customScalarAdapters: CustomScalarAdapters,
          typename: String,
        ):
            com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.DroidOwner {
          var __typename: String? = typename

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          reader.rewind()
          val _petOwnerFragment = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.fromJson(reader,
              customScalarAdapters, __typename!!)

          return com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.DroidOwner(
            __typename = __typename!!,
            petOwnerFragment = _petOwnerFragment
          )
        }

        public fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.DroidOwner,
        ): Unit {
          writer.name("__typename")
          StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

          com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.toJson(writer,
              customScalarAdapters, value.petOwnerFragment)
        }
      }

      public object Owner {
        public val RESPONSE_NAMES: List<String> = listOf("__typename")

        public fun fromJson(
          reader: JsonReader,
          customScalarAdapters: CustomScalarAdapters,
          typename: String,
        ):
            com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.Owner {
          var __typename: String? = typename

          while(true) {
            when (reader.selectName(RESPONSE_NAMES)) {
              0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
              else -> break
            }
          }

          reader.rewind()
          val _petOwnerFragment = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.fromJson(reader,
              customScalarAdapters, __typename!!)

          return com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.Owner(
            __typename = __typename!!,
            petOwnerFragment = _petOwnerFragment
          )
        }

        public fun toJson(
          writer: JsonWriter,
          customScalarAdapters: CustomScalarAdapters,
          `value`: com.example.operation_based_possible_shapes_fragment.fragment.ThingWithIDFragment.OnPet.Owner,
        ): Unit {
          writer.name("__typename")
          StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

          com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.toJson(writer,
              customScalarAdapters, value.petOwnerFragment)
        }
      }
    }
  }
}
