//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.5.1-SNAPSHOT'.
//
package com.example.operation_based_possible_shapes_fragment.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.json.readTypename
import com.apollographql.apollo3.api.possibleTypes
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object PetOwnerFragmentImpl_ResponseAdapter {
  public object IPetOwnerFragment :
      Adapter<com.example.operation_based_possible_shapes_fragment.fragment.IPetOwnerFragment> {
    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.operation_based_possible_shapes_fragment.fragment.IPetOwnerFragment {
      val __typename = reader.readTypename()
      return when(__typename) {
        "Human",
        -> HumanPetOwnerFragment.fromJson(reader, customScalarAdapters, __typename)
        "Droid",
        -> DroidPetOwnerFragment.fromJson(reader, customScalarAdapters, __typename)
        else
        -> PetOwnerFragment.fromJson(reader, customScalarAdapters, __typename)
      }
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.IPetOwnerFragment,
    ): Unit {
      when(value) {
        is com.example.operation_based_possible_shapes_fragment.fragment.HumanPetOwnerFragment ->
            HumanPetOwnerFragment.toJson(writer, customScalarAdapters, value)
        is com.example.operation_based_possible_shapes_fragment.fragment.DroidPetOwnerFragment ->
            DroidPetOwnerFragment.toJson(writer, customScalarAdapters, value)
        is com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment ->
            PetOwnerFragment.toJson(writer, customScalarAdapters, value)
      }
    }
  }

  public object HumanPetOwnerFragment {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): com.example.operation_based_possible_shapes_fragment.fragment.HumanPetOwnerFragment {
      var __typename: String? = typename

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      reader.rewind()
      val _onHuman = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnHuman.fromJson(reader,
          customScalarAdapters)

      var _onDroid: com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnDroid? = null
      if (possibleTypes("Droid").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onDroid = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnDroid.fromJson(reader,
            customScalarAdapters)
      }

      return com.example.operation_based_possible_shapes_fragment.fragment.HumanPetOwnerFragment(
        __typename = __typename,
        onHuman = _onHuman,
        onDroid = _onDroid
      )
    }

    public fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.HumanPetOwnerFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnHuman.toJson(writer,
          customScalarAdapters, value.onHuman)

      if (value.onDroid != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnDroid.toJson(writer,
            customScalarAdapters, value.onDroid)
      }
    }
  }

  public object DroidPetOwnerFragment {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): com.example.operation_based_possible_shapes_fragment.fragment.DroidPetOwnerFragment {
      var __typename: String? = typename

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onHuman: com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnHuman? = null
      if (possibleTypes("Human").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onHuman = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnHuman.fromJson(reader,
            customScalarAdapters)
      }

      reader.rewind()
      val _onDroid = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnDroid.fromJson(reader,
          customScalarAdapters)

      return com.example.operation_based_possible_shapes_fragment.fragment.DroidPetOwnerFragment(
        __typename = __typename,
        onHuman = _onHuman,
        onDroid = _onDroid
      )
    }

    public fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.DroidPetOwnerFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.onHuman != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnHuman.toJson(writer,
            customScalarAdapters, value.onHuman)
      }

      com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnDroid.toJson(writer,
          customScalarAdapters, value.onDroid)
    }
  }

  public object PetOwnerFragment {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public fun fromJson(
      reader: JsonReader,
      customScalarAdapters: CustomScalarAdapters,
      typename: String,
    ): com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment {
      var __typename: String? = typename

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _onHuman: com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnHuman? = null
      if (possibleTypes("Human").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onHuman = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnHuman.fromJson(reader,
            customScalarAdapters)
      }

      var _onDroid: com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnDroid? = null
      if (possibleTypes("Droid").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _onDroid = com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnDroid.fromJson(reader,
            customScalarAdapters)
      }

      return com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment(
        __typename = __typename,
        onHuman = _onHuman,
        onDroid = _onDroid
      )
    }

    public fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      if (value.onHuman != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnHuman.toJson(writer,
            customScalarAdapters, value.onHuman)
      }

      if (value.onDroid != null) {
        com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragmentImpl_ResponseAdapter.PetOwnerFragment.OnDroid.toJson(writer,
            customScalarAdapters, value.onDroid)
      }
    }

    public object OnHuman :
        Adapter<com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnHuman>
        {
      public val RESPONSE_NAMES: List<String> = listOf("id", "name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnHuman {
        var _id: String? = null
        var _name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnHuman(
          id = _id!!,
          name = _name!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnHuman,
      ): Unit {
        writer.name("id")
        StringAdapter.toJson(writer, customScalarAdapters, value.id)

        writer.name("name")
        StringAdapter.toJson(writer, customScalarAdapters, value.name)
      }
    }

    public object OnDroid :
        Adapter<com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnDroid>
        {
      public val RESPONSE_NAMES: List<String> = listOf("id", "build_name", "model_name")

      public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
          com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnDroid {
        var _id: String? = null
        var _build_name: String? = null
        var _model_name: String? = null

        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
            1 -> _build_name = StringAdapter.fromJson(reader, customScalarAdapters)
            2 -> _model_name = StringAdapter.fromJson(reader, customScalarAdapters)
            else -> break
          }
        }

        return com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnDroid(
          id = _id!!,
          build_name = _build_name!!,
          model_name = _model_name!!
        )
      }

      public override fun toJson(
        writer: JsonWriter,
        customScalarAdapters: CustomScalarAdapters,
        `value`: com.example.operation_based_possible_shapes_fragment.fragment.PetOwnerFragment.OnDroid,
      ): Unit {
        writer.name("id")
        StringAdapter.toJson(writer, customScalarAdapters, value.id)

        writer.name("build_name")
        StringAdapter.toJson(writer, customScalarAdapters, value.build_name)

        writer.name("model_name")
        StringAdapter.toJson(writer, customScalarAdapters, value.model_name)
      }
    }
  }
}
