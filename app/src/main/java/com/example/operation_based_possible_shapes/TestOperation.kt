//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.operation_based_possible_shapes

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.operation_based_possible_shapes.adapter.TestOperation_ResponseAdapter
import com.example.operation_based_possible_shapes.selections.TestOperationSelections
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit

public class TestOperation() : Query<TestOperation.Data> {
  public override fun equals(other: Any?): Boolean = other != null && other::class == this::class

  public override fun hashCode(): Int = this::class.hashCode()

  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    // This operation doesn't have any variable
  }

  public override fun adapter(): Adapter<Data> = TestOperation_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.operation_based_possible_shapes.type.Query.type
  )
  .selections(selections = TestOperationSelections.__root)
  .build()

  @ApolloAdaptableWith(TestOperation_ResponseAdapter.Data::class)
  public data class Data(
    public val something: ISomething?,
    public val somethingWithOnlyOneShape: SomethingWithOnlyOneShape?,
  ) : Query.Data {
    public sealed interface ISomething {
      public val __typename: String

      public val id: String

      /**
       * Synthetic field for inline fragment on Human
       */
      public val onHuman: Something.OnHuman?

      /**
       * Synthetic field for inline fragment on Droid
       */
      public val onDroid: Something.OnDroid?

      /**
       * Synthetic field for inline fragment on Pet
       */
      public val onPet: Something.OnPet?

      /**
       * Synthetic field for inline fragment on ThingWithName
       */
      public val onThingWithName: Something.OnThingWithName?
    }

    public data class DroidSomething(
      public override val __typename: String,
      public override val id: String,
      /**
       * Synthetic field for inline fragment on Human
       */
      public override val onHuman: Something.OnHuman?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public override val onDroid: Something.OnDroid,
      /**
       * Synthetic field for inline fragment on Pet
       */
      public override val onPet: Something.OnPet?,
      /**
       * Synthetic field for inline fragment on ThingWithName
       */
      public override val onThingWithName: Something.OnThingWithName?,
    ) : ISomething

    public data class HumanThingWithNameSomething(
      public override val __typename: String,
      public override val id: String,
      /**
       * Synthetic field for inline fragment on Human
       */
      public override val onHuman: Something.OnHuman,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public override val onDroid: Something.OnDroid?,
      /**
       * Synthetic field for inline fragment on Pet
       */
      public override val onPet: Something.OnPet?,
      /**
       * Synthetic field for inline fragment on ThingWithName
       */
      public override val onThingWithName: Something.OnThingWithName,
    ) : ISomething

    public data class PetThingWithNameSomething(
      public override val __typename: String,
      public override val id: String,
      /**
       * Synthetic field for inline fragment on Human
       */
      public override val onHuman: Something.OnHuman?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public override val onDroid: Something.OnDroid?,
      /**
       * Synthetic field for inline fragment on Pet
       */
      public override val onPet: Something.OnPet,
      /**
       * Synthetic field for inline fragment on ThingWithName
       */
      public override val onThingWithName: Something.OnThingWithName,
    ) : ISomething

    public data class Something(
      public override val __typename: String,
      public override val id: String,
      /**
       * Synthetic field for inline fragment on Human
       */
      public override val onHuman: OnHuman?,
      /**
       * Synthetic field for inline fragment on Droid
       */
      public override val onDroid: OnDroid?,
      /**
       * Synthetic field for inline fragment on Pet
       */
      public override val onPet: OnPet?,
      /**
       * Synthetic field for inline fragment on ThingWithName
       */
      public override val onThingWithName: OnThingWithName?,
    ) : ISomething {
      public data class OnHuman(
        public val name: String,
      )

      public data class OnDroid(
        public val build_name: String,
        public val model_name: String,
      )

      public data class OnPet(
        public val name: String,
        public val owner: IOwner,
      ) {
        public sealed interface IOwner {
          public val __typename: String

          /**
           * Synthetic field for inline fragment on Human
           */
          public val onHuman: Owner.OnHuman?

          /**
           * Synthetic field for inline fragment on Droid
           */
          public val onDroid: Owner.OnDroid?
        }

        public data class HumanOwner(
          public override val __typename: String,
          /**
           * Synthetic field for inline fragment on Human
           */
          public override val onHuman: Owner.OnHuman,
          /**
           * Synthetic field for inline fragment on Droid
           */
          public override val onDroid: Owner.OnDroid?,
        ) : IOwner

        public data class DroidOwner(
          public override val __typename: String,
          /**
           * Synthetic field for inline fragment on Human
           */
          public override val onHuman: Owner.OnHuman?,
          /**
           * Synthetic field for inline fragment on Droid
           */
          public override val onDroid: Owner.OnDroid,
        ) : IOwner

        public data class Owner(
          public override val __typename: String,
          /**
           * Synthetic field for inline fragment on Human
           */
          public override val onHuman: OnHuman?,
          /**
           * Synthetic field for inline fragment on Droid
           */
          public override val onDroid: OnDroid?,
        ) : IOwner {
          public data class OnHuman(
            public val id: String,
            public val name: String,
          )

          public data class OnDroid(
            public val id: String,
            public val build_name: String,
            public val model_name: String,
          )
        }
      }

      public data class OnThingWithName(
        public val name: String,
      )
    }

    public data class SomethingWithOnlyOneShape(
      public val id: String,
    )
  }

  public companion object {
    public const val OPERATION_ID: String =
        "cdb46f8fbb04ff6635dc7237104f154ccbfc04b56c467a23494291da4f9a3113"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query TestOperation {
     *   something {
     *     __typename
     *     id
     *     ... on Human {
     *       name
     *     }
     *     ... on Droid {
     *       build_name
     *       model_name
     *     }
     *     ... on Pet {
     *       name
     *       owner {
     *         __typename
     *         ... on Human {
     *           id
     *           name
     *         }
     *         ... on Droid {
     *           id
     *           build_name
     *           model_name
     *         }
     *       }
     *     }
     *     ... on ThingWithName {
     *       name
     *     }
     *   }
     *   somethingWithOnlyOneShape: something {
     *     id
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query TestOperation { something { __typename id ... on Human { name } ... on Droid { build_name model_name } ... on Pet { name owner { __typename ... on Human { id name } ... on Droid { id build_name model_name } } } ... on ThingWithName { name } } somethingWithOnlyOneShape: something { id } }"

    public const val OPERATION_NAME: String = "TestOperation"
  }
}
